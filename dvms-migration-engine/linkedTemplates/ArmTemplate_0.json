{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dvms-migration-engine"
		},
		"ls_azStorageGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_azStorageGen2'"
		},
		"ls_az_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_az_blob'"
		},
		"ls_sql_dvms_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_dvms'"
		},
		"ls_azStorageGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dvmstransformdatalake.dfs.core.usgovcloudapi.net/"
		},
		"ls_tenant_security_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dev.safefleetcloud.com:443/tenant-security/api/"
		},
		"ls_tenant_settings_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dev.safefleetcloud.us:443/tenant-settings/api/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_until')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool('false')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "testuntil",
										"value": "9999999"
									}
								}
							],
							"timeout": "0.00:00:30"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testuntil": {
						"type": "String",
						"defaultValue": "100"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azStorageGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_azStorageGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_azStorageGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_az_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_az_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_tenant_security')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_tenant_security_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_tenant_settings')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_tenant_settings_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/common-self-hosted-ir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_until_check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set iterations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('iterations')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_until",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Set iterations",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set rowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "iterations",
							"value": {
								"value": "@range(1,variables('rowcount'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set rowCount",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "rowcount",
							"value": {
								"value": "@pipeline().globalParameters.file_iterations",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"rowcount": {
						"type": "Integer",
						"defaultValue": 1
					},
					"iterations": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_until')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbocobanOperators.csv",
						"folderPath": "backup/dbocobanOperators",
						"container": "vipra-dl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "userId",
						"type": "String"
					},
					{
						"name": "firstname",
						"type": "String"
					},
					{
						"name": "lastname",
						"type": "String"
					},
					{
						"name": "fullname",
						"type": "String"
					},
					{
						"name": "password",
						"type": "String"
					},
					{
						"name": "officerTitle",
						"type": "String"
					},
					{
						"name": "officerID",
						"type": "String"
					},
					{
						"name": "OperatorID",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "nexus/units",
						"container": "vipra-dl"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azStorageGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "operator.parquet"
					},
					"folder": {
						"type": "string",
						"defaultValue": "backup/dbocobanOperators"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "vipra-dl"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "userId",
						"type": "UTF8"
					},
					{
						"name": "firstname",
						"type": "UTF8"
					},
					{
						"name": "lastname",
						"type": "UTF8"
					},
					{
						"name": "fullname",
						"type": "UTF8"
					},
					{
						"name": "password",
						"type": "UTF8"
					},
					{
						"name": "officerTitle",
						"type": "UTF8"
					},
					{
						"name": "officerID",
						"type": "UTF8"
					},
					{
						"name": "OperatorID",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azStorageGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_az_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "backup",
						"container": "vipra-dl"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "userId",
						"type": "UTF8"
					},
					{
						"name": "firstname",
						"type": "UTF8"
					},
					{
						"name": "lastname",
						"type": "UTF8"
					},
					{
						"name": "fullname",
						"type": "UTF8"
					},
					{
						"name": "password",
						"type": "UTF8"
					},
					{
						"name": "officerTitle",
						"type": "UTF8"
					},
					{
						"name": "officerID",
						"type": "UTF8"
					},
					{
						"name": "OperatorID",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_az_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tenant_security')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tenant_security",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "users"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tenant_security')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tenant_settings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tenant_settings",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "devices"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tenant_settings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_dvms')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_dvms_connectionString')]"
				},
				"connectVia": {
					"referenceName": "common-self-hosted-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/common-self-hosted-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_csv_to_parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cd_csv_parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "dvms"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_unit_transform')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "access_token",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": "Bearer CEB6CB24FD20CD8FDE47FF33820E2367D803B51ABF38F250641753B7C752B6B3-1"
						}
					},
					{
						"name": "Copy_existingUnits",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "access_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@variables('access_token')",
										"type": "Expression"
									},
									"X-Tenant-Id": "dvmspoc"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['deviceId']"
										},
										"sink": {
											"name": "deviceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['unit']"
										},
										"sink": {
											"name": "unit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['unitId']"
										},
										"sink": {
											"name": "unitId",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['content']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "ds_tenant_settings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gen2_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "devices"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"access_token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "dvms"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tenant_settings')]",
				"[concat(variables('factoryId'), '/datasets/ds_gen2_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_bridge')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference"
							},
							"name": "nexusSource"
						},
						{
							"dataset": {
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference"
							},
							"name": "transformSource"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "findDistinctUser"
						},
						{
							"name": "filterNotNull"
						}
					],
					"scriptLines": [
						"parameters{",
						"     groupByParameter as string",
						"}",
						"source(output(",
						"          Id as string,",
						"          email as string,",
						"          firstname as string,",
						"          lastname as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> nexusSource",
						"source(output(",
						"          sourceId as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> transformSource",
						"nexusSource, transformSource union(byName: true)~> union1",
						"union1 aggregate(groupBy(groupByParam = $groupByParameter),",
						"     each(match(name!='$groupByParameter'), $$ = first($$))) ~> findDistinctUser",
						"findDistinctUser filter(!isNull(Id)) ~> filterNotNull",
						"filterNotNull sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: true,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_gen2_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_users_tobeAdded')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference"
							},
							"name": "transformSource"
						},
						{
							"dataset": {
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference"
							},
							"name": "nexusSources"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "existsUsers"
						}
					],
					"scriptLines": [
						"source(output(",
						"          userId as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          fullname as string,",
						"          password as string,",
						"          officerTitle as string,",
						"          officerID as string,",
						"          OperatorID as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'sourcefilepath',",
						"     format: 'parquet') ~> transformSource",
						"source(output(",
						"          userId as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          fullname as string,",
						"          password as string,",
						"          officerTitle as string,",
						"          officerID as string,",
						"          OperatorID as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     rowUrlColumn: 'sourcefilepath',",
						"     format: 'parquet') ~> nexusSources",
						"transformSource, nexusSources exists(transformSource@email == nexusSources@email,",
						"     negate:true,",
						"     broadcast: 'auto')~> existsUsers",
						"existsUsers sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_gen2_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfwritetodelta')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_csv",
								"type": "DatasetReference"
							},
							"name": "csvSource"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_az_blob",
								"type": "LinkedServiceReference"
							},
							"name": "deltalakeSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          userId as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          fullname as string,",
						"          password as string,",
						"          officerTitle as string,",
						"          officerID as string,",
						"          OperatorID as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> csvSource",
						"csvSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     container: 'vipra-dl',",
						"     overwrite: true,",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> deltalakeSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_az_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_user_transfrom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cd_csv_parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "operator.parquet",
									"folder": "backup/dbocobanOperators"
								}
							}
						]
					},
					{
						"name": "copy_transformUser",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd_csv_parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "userId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "sourceId",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "firstname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "firstname",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "lastname",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "operator.parquet",
									"folder": "backup/dbocobanOperators"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "transformUser.parquet",
									"folder": "transform/users"
								}
							}
						]
					},
					{
						"name": "Copy_existingUsers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "access_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@variables('access_token')",
										"type": "Expression"
									},
									"X-Tenant-Id": "dvmspoc"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Id",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstname']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lastname']"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['content']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "ds_tenant_security",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "tenantSecurityUsers.parquet",
									"folder": "nexus/users"
								}
							}
						]
					},
					{
						"name": "access_token",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "copy_transformUser",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "access_token",
							"value": "Bearer EEC3B8C43AE69239C36977B5ED43C28D189AB96A0CFB47A927334416C3B9D72F-1"
						}
					},
					{
						"name": "copyActivityTocreateUsers",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "df_userstobeAdded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "df_userstobeAdded",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy_existingUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_users_tobeAdded",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"transformSource": {
										"filename": "transformUser.parquet",
										"folder": "transform/users"
									},
									"nexusSources": {
										"filename": "tenantSecurityUsers.parquet",
										"folder": "nexus/users"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					},
					{
						"name": "Copy_existingUsers_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyActivityTocreateUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@variables('access_token')",
										"type": "Expression"
									},
									"X-Tenant-Id": "dvmspoc"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Id",
											"type": "Guid"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstname']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['lastname']"
										},
										"sink": {
											"name": "lastname",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['content']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "ds_tenant_security",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_gen2_parquet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "tenantSecurityUsers.parquet",
									"folder": "nexus/users"
								}
							}
						]
					},
					{
						"name": "df_toupdateBridgeUser",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy_existingUsers_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_bridge",
								"type": "DataFlowReference",
								"parameters": {
									"groupByParameter": "email"
								},
								"datasetParameters": {
									"nexusSource": {
										"filename": "tenantSecurityUsers.parquet",
										"folder": "nexus/users"
									},
									"transformSource": {
										"filename": "transformUser.parquet",
										"folder": "transfrom/users"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"access_token": {
						"type": "String"
					}
				},
				"folder": {
					"name": "dvms"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_gen2_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_tenant_security')]",
				"[concat(variables('factoryId'), '/dataflows/df_users_tobeAdded')]",
				"[concat(variables('factoryId'), '/dataflows/df_bridge')]"
			]
		}
	]
}